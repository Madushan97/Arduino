
System 8.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000416  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003c2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000416  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000448  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000488  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006b5  00000000  00000000  000004a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000612  00000000  00000000  00000b5d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000256  00000000  00000000  0000116f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000013c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000349  00000000  00000000  000013ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00001735  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 df 01 	jmp	0x3be	; 0x3be <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <avr/io.h>


int main(void)
{
   DDRB = DDRB | 0b00011111;		//config PB0-PB5
  80:	84 b1       	in	r24, 0x04	; 4
  82:	8f 61       	ori	r24, 0x1F	; 31
  84:	84 b9       	out	0x04, r24	; 4
   DDRC = DDRC & 0b11111110;		// config A0 as input
  86:	38 98       	cbi	0x07, 0	; 7
   
   ADMUX = ( ADMUX & 0b01111111 ) | 0b01000000;		// set Vref to 5V
  88:	ec e7       	ldi	r30, 0x7C	; 124
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	80 81       	ld	r24, Z
  8e:	8f 73       	andi	r24, 0x3F	; 63
  90:	80 64       	ori	r24, 0x40	; 64
  92:	80 83       	st	Z, r24
   ADMUX = ADMUX & 0b11111000;		// multiplex PC0 as analog input channel ADC0
  94:	80 81       	ld	r24, Z
  96:	88 7f       	andi	r24, 0xF8	; 248
  98:	80 83       	st	Z, r24
   
   ADCSRA = ADCSRA | 0b00000111;		// select prescaler to 128
  9a:	ea e7       	ldi	r30, 0x7A	; 122
  9c:	f0 e0       	ldi	r31, 0x00	; 0
  9e:	80 81       	ld	r24, Z
  a0:	87 60       	ori	r24, 0x07	; 7
  a2:	80 83       	st	Z, r24
   ADCSRA = ADCSRA | 0b10000000;		// enable ADC
  a4:	80 81       	ld	r24, Z
  a6:	80 68       	ori	r24, 0x80	; 128
  a8:	80 83       	st	Z, r24
   
    while (1) 
    {
		ADCSRA = ADCSRA | 0b01000000;		// ADC start
  aa:	ca e7       	ldi	r28, 0x7A	; 122
  ac:	d0 e0       	ldi	r29, 0x00	; 0
		while (ADCSRA & 0b01000000);	//poll till adc over
		float vIn = ADCW * 5.0 / 1024;
  ae:	08 e7       	ldi	r16, 0x78	; 120
  b0:	10 e0       	ldi	r17, 0x00	; 0
   ADCSRA = ADCSRA | 0b00000111;		// select prescaler to 128
   ADCSRA = ADCSRA | 0b10000000;		// enable ADC
   
    while (1) 
    {
		ADCSRA = ADCSRA | 0b01000000;		// ADC start
  b2:	88 81       	ld	r24, Y
  b4:	80 64       	ori	r24, 0x40	; 64
  b6:	88 83       	st	Y, r24
		while (ADCSRA & 0b01000000);	//poll till adc over
  b8:	88 81       	ld	r24, Y
  ba:	86 fd       	sbrc	r24, 6
  bc:	fd cf       	rjmp	.-6      	; 0xb8 <main+0x38>
		float vIn = ADCW * 5.0 / 1024;
  be:	f8 01       	movw	r30, r16
  c0:	60 81       	ld	r22, Z
  c2:	71 81       	ldd	r23, Z+1	; 0x01
  c4:	80 e0       	ldi	r24, 0x00	; 0
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	0e 94 bb 00 	call	0x176	; 0x176 <__floatunsisf>
  cc:	20 e0       	ldi	r18, 0x00	; 0
  ce:	30 e0       	ldi	r19, 0x00	; 0
  d0:	40 ea       	ldi	r20, 0xA0	; 160
  d2:	50 e4       	ldi	r21, 0x40	; 64
  d4:	0e 94 fd 00 	call	0x1fa	; 0x1fa <__mulsf3>
  d8:	20 e0       	ldi	r18, 0x00	; 0
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	40 e8       	ldi	r20, 0x80	; 128
  de:	5a e3       	ldi	r21, 0x3A	; 58
  e0:	0e 94 fd 00 	call	0x1fa	; 0x1fa <__mulsf3>
  e4:	6b 01       	movw	r12, r22
  e6:	7c 01       	movw	r14, r24
		PORTB = PORTB | 0b11100000;		// turn off all LEDs
  e8:	85 b1       	in	r24, 0x05	; 5
  ea:	80 6e       	ori	r24, 0xE0	; 224
  ec:	85 b9       	out	0x05, r24	; 5
		if (vIn > 4)
  ee:	20 e0       	ldi	r18, 0x00	; 0
  f0:	30 e0       	ldi	r19, 0x00	; 0
  f2:	40 e8       	ldi	r20, 0x80	; 128
  f4:	50 e4       	ldi	r21, 0x40	; 64
  f6:	c7 01       	movw	r24, r14
  f8:	b6 01       	movw	r22, r12
  fa:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <__gesf2>
  fe:	18 16       	cp	r1, r24
 100:	24 f4       	brge	.+8      	; 0x10a <main+0x8a>
			PORTB = PORTB | 0b00011111;
 102:	85 b1       	in	r24, 0x05	; 5
 104:	8f 61       	ori	r24, 0x1F	; 31
 106:	85 b9       	out	0x05, r24	; 5
 108:	d4 cf       	rjmp	.-88     	; 0xb2 <main+0x32>
		else if (vIn > 3)
 10a:	20 e0       	ldi	r18, 0x00	; 0
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	40 e4       	ldi	r20, 0x40	; 64
 110:	50 e4       	ldi	r21, 0x40	; 64
 112:	c7 01       	movw	r24, r14
 114:	b6 01       	movw	r22, r12
 116:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <__gesf2>
 11a:	18 16       	cp	r1, r24
 11c:	24 f4       	brge	.+8      	; 0x126 <main+0xa6>
			PORTB = PORTB | 0b00001111;
 11e:	85 b1       	in	r24, 0x05	; 5
 120:	8f 60       	ori	r24, 0x0F	; 15
 122:	85 b9       	out	0x05, r24	; 5
 124:	c6 cf       	rjmp	.-116    	; 0xb2 <main+0x32>
		else if (vIn > 2)
 126:	20 e0       	ldi	r18, 0x00	; 0
 128:	30 e0       	ldi	r19, 0x00	; 0
 12a:	40 e0       	ldi	r20, 0x00	; 0
 12c:	50 e4       	ldi	r21, 0x40	; 64
 12e:	c7 01       	movw	r24, r14
 130:	b6 01       	movw	r22, r12
 132:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <__gesf2>
 136:	18 16       	cp	r1, r24
 138:	24 f4       	brge	.+8      	; 0x142 <main+0xc2>
			PORTB = PORTB | 0b00000111;
 13a:	85 b1       	in	r24, 0x05	; 5
 13c:	87 60       	ori	r24, 0x07	; 7
 13e:	85 b9       	out	0x05, r24	; 5
 140:	b8 cf       	rjmp	.-144    	; 0xb2 <main+0x32>
		else if (vIn > 1)
 142:	20 e0       	ldi	r18, 0x00	; 0
 144:	30 e0       	ldi	r19, 0x00	; 0
 146:	40 e8       	ldi	r20, 0x80	; 128
 148:	5f e3       	ldi	r21, 0x3F	; 63
 14a:	c7 01       	movw	r24, r14
 14c:	b6 01       	movw	r22, r12
 14e:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <__gesf2>
 152:	18 16       	cp	r1, r24
 154:	24 f4       	brge	.+8      	; 0x15e <main+0xde>
			PORTB = PORTB | 0b00000011;
 156:	85 b1       	in	r24, 0x05	; 5
 158:	83 60       	ori	r24, 0x03	; 3
 15a:	85 b9       	out	0x05, r24	; 5
 15c:	aa cf       	rjmp	.-172    	; 0xb2 <main+0x32>
		else if (vIn > 0)
 15e:	20 e0       	ldi	r18, 0x00	; 0
 160:	30 e0       	ldi	r19, 0x00	; 0
 162:	a9 01       	movw	r20, r18
 164:	c7 01       	movw	r24, r14
 166:	b6 01       	movw	r22, r12
 168:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <__gesf2>
 16c:	18 16       	cp	r1, r24
 16e:	0c f0       	brlt	.+2      	; 0x172 <main+0xf2>
 170:	a0 cf       	rjmp	.-192    	; 0xb2 <main+0x32>
			PORTB = PORTB | 0b00000001;
 172:	28 9a       	sbi	0x05, 0	; 5
 174:	9e cf       	rjmp	.-196    	; 0xb2 <main+0x32>

00000176 <__floatunsisf>:
 176:	e8 94       	clt
 178:	09 c0       	rjmp	.+18     	; 0x18c <__floatsisf+0x12>

0000017a <__floatsisf>:
 17a:	97 fb       	bst	r25, 7
 17c:	3e f4       	brtc	.+14     	; 0x18c <__floatsisf+0x12>
 17e:	90 95       	com	r25
 180:	80 95       	com	r24
 182:	70 95       	com	r23
 184:	61 95       	neg	r22
 186:	7f 4f       	sbci	r23, 0xFF	; 255
 188:	8f 4f       	sbci	r24, 0xFF	; 255
 18a:	9f 4f       	sbci	r25, 0xFF	; 255
 18c:	99 23       	and	r25, r25
 18e:	a9 f0       	breq	.+42     	; 0x1ba <__floatsisf+0x40>
 190:	f9 2f       	mov	r31, r25
 192:	96 e9       	ldi	r25, 0x96	; 150
 194:	bb 27       	eor	r27, r27
 196:	93 95       	inc	r25
 198:	f6 95       	lsr	r31
 19a:	87 95       	ror	r24
 19c:	77 95       	ror	r23
 19e:	67 95       	ror	r22
 1a0:	b7 95       	ror	r27
 1a2:	f1 11       	cpse	r31, r1
 1a4:	f8 cf       	rjmp	.-16     	; 0x196 <__floatsisf+0x1c>
 1a6:	fa f4       	brpl	.+62     	; 0x1e6 <__floatsisf+0x6c>
 1a8:	bb 0f       	add	r27, r27
 1aa:	11 f4       	brne	.+4      	; 0x1b0 <__floatsisf+0x36>
 1ac:	60 ff       	sbrs	r22, 0
 1ae:	1b c0       	rjmp	.+54     	; 0x1e6 <__floatsisf+0x6c>
 1b0:	6f 5f       	subi	r22, 0xFF	; 255
 1b2:	7f 4f       	sbci	r23, 0xFF	; 255
 1b4:	8f 4f       	sbci	r24, 0xFF	; 255
 1b6:	9f 4f       	sbci	r25, 0xFF	; 255
 1b8:	16 c0       	rjmp	.+44     	; 0x1e6 <__floatsisf+0x6c>
 1ba:	88 23       	and	r24, r24
 1bc:	11 f0       	breq	.+4      	; 0x1c2 <__floatsisf+0x48>
 1be:	96 e9       	ldi	r25, 0x96	; 150
 1c0:	11 c0       	rjmp	.+34     	; 0x1e4 <__floatsisf+0x6a>
 1c2:	77 23       	and	r23, r23
 1c4:	21 f0       	breq	.+8      	; 0x1ce <__floatsisf+0x54>
 1c6:	9e e8       	ldi	r25, 0x8E	; 142
 1c8:	87 2f       	mov	r24, r23
 1ca:	76 2f       	mov	r23, r22
 1cc:	05 c0       	rjmp	.+10     	; 0x1d8 <__floatsisf+0x5e>
 1ce:	66 23       	and	r22, r22
 1d0:	71 f0       	breq	.+28     	; 0x1ee <__floatsisf+0x74>
 1d2:	96 e8       	ldi	r25, 0x86	; 134
 1d4:	86 2f       	mov	r24, r22
 1d6:	70 e0       	ldi	r23, 0x00	; 0
 1d8:	60 e0       	ldi	r22, 0x00	; 0
 1da:	2a f0       	brmi	.+10     	; 0x1e6 <__floatsisf+0x6c>
 1dc:	9a 95       	dec	r25
 1de:	66 0f       	add	r22, r22
 1e0:	77 1f       	adc	r23, r23
 1e2:	88 1f       	adc	r24, r24
 1e4:	da f7       	brpl	.-10     	; 0x1dc <__floatsisf+0x62>
 1e6:	88 0f       	add	r24, r24
 1e8:	96 95       	lsr	r25
 1ea:	87 95       	ror	r24
 1ec:	97 f9       	bld	r25, 7
 1ee:	08 95       	ret

000001f0 <__gesf2>:
 1f0:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <__fp_cmp>
 1f4:	08 f4       	brcc	.+2      	; 0x1f8 <__gesf2+0x8>
 1f6:	8f ef       	ldi	r24, 0xFF	; 255
 1f8:	08 95       	ret

000001fa <__mulsf3>:
 1fa:	0e 94 10 01 	call	0x220	; 0x220 <__mulsf3x>
 1fe:	0c 94 a5 01 	jmp	0x34a	; 0x34a <__fp_round>
 202:	0e 94 97 01 	call	0x32e	; 0x32e <__fp_pscA>
 206:	38 f0       	brcs	.+14     	; 0x216 <__mulsf3+0x1c>
 208:	0e 94 9e 01 	call	0x33c	; 0x33c <__fp_pscB>
 20c:	20 f0       	brcs	.+8      	; 0x216 <__mulsf3+0x1c>
 20e:	95 23       	and	r25, r21
 210:	11 f0       	breq	.+4      	; 0x216 <__mulsf3+0x1c>
 212:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__fp_inf>
 216:	0c 94 94 01 	jmp	0x328	; 0x328 <__fp_nan>
 21a:	11 24       	eor	r1, r1
 21c:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__fp_szero>

00000220 <__mulsf3x>:
 220:	0e 94 b6 01 	call	0x36c	; 0x36c <__fp_split3>
 224:	70 f3       	brcs	.-36     	; 0x202 <__mulsf3+0x8>

00000226 <__mulsf3_pse>:
 226:	95 9f       	mul	r25, r21
 228:	c1 f3       	breq	.-16     	; 0x21a <__mulsf3+0x20>
 22a:	95 0f       	add	r25, r21
 22c:	50 e0       	ldi	r21, 0x00	; 0
 22e:	55 1f       	adc	r21, r21
 230:	62 9f       	mul	r22, r18
 232:	f0 01       	movw	r30, r0
 234:	72 9f       	mul	r23, r18
 236:	bb 27       	eor	r27, r27
 238:	f0 0d       	add	r31, r0
 23a:	b1 1d       	adc	r27, r1
 23c:	63 9f       	mul	r22, r19
 23e:	aa 27       	eor	r26, r26
 240:	f0 0d       	add	r31, r0
 242:	b1 1d       	adc	r27, r1
 244:	aa 1f       	adc	r26, r26
 246:	64 9f       	mul	r22, r20
 248:	66 27       	eor	r22, r22
 24a:	b0 0d       	add	r27, r0
 24c:	a1 1d       	adc	r26, r1
 24e:	66 1f       	adc	r22, r22
 250:	82 9f       	mul	r24, r18
 252:	22 27       	eor	r18, r18
 254:	b0 0d       	add	r27, r0
 256:	a1 1d       	adc	r26, r1
 258:	62 1f       	adc	r22, r18
 25a:	73 9f       	mul	r23, r19
 25c:	b0 0d       	add	r27, r0
 25e:	a1 1d       	adc	r26, r1
 260:	62 1f       	adc	r22, r18
 262:	83 9f       	mul	r24, r19
 264:	a0 0d       	add	r26, r0
 266:	61 1d       	adc	r22, r1
 268:	22 1f       	adc	r18, r18
 26a:	74 9f       	mul	r23, r20
 26c:	33 27       	eor	r19, r19
 26e:	a0 0d       	add	r26, r0
 270:	61 1d       	adc	r22, r1
 272:	23 1f       	adc	r18, r19
 274:	84 9f       	mul	r24, r20
 276:	60 0d       	add	r22, r0
 278:	21 1d       	adc	r18, r1
 27a:	82 2f       	mov	r24, r18
 27c:	76 2f       	mov	r23, r22
 27e:	6a 2f       	mov	r22, r26
 280:	11 24       	eor	r1, r1
 282:	9f 57       	subi	r25, 0x7F	; 127
 284:	50 40       	sbci	r21, 0x00	; 0
 286:	9a f0       	brmi	.+38     	; 0x2ae <__mulsf3_pse+0x88>
 288:	f1 f0       	breq	.+60     	; 0x2c6 <__mulsf3_pse+0xa0>
 28a:	88 23       	and	r24, r24
 28c:	4a f0       	brmi	.+18     	; 0x2a0 <__mulsf3_pse+0x7a>
 28e:	ee 0f       	add	r30, r30
 290:	ff 1f       	adc	r31, r31
 292:	bb 1f       	adc	r27, r27
 294:	66 1f       	adc	r22, r22
 296:	77 1f       	adc	r23, r23
 298:	88 1f       	adc	r24, r24
 29a:	91 50       	subi	r25, 0x01	; 1
 29c:	50 40       	sbci	r21, 0x00	; 0
 29e:	a9 f7       	brne	.-22     	; 0x28a <__mulsf3_pse+0x64>
 2a0:	9e 3f       	cpi	r25, 0xFE	; 254
 2a2:	51 05       	cpc	r21, r1
 2a4:	80 f0       	brcs	.+32     	; 0x2c6 <__mulsf3_pse+0xa0>
 2a6:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__fp_inf>
 2aa:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__fp_szero>
 2ae:	5f 3f       	cpi	r21, 0xFF	; 255
 2b0:	e4 f3       	brlt	.-8      	; 0x2aa <__mulsf3_pse+0x84>
 2b2:	98 3e       	cpi	r25, 0xE8	; 232
 2b4:	d4 f3       	brlt	.-12     	; 0x2aa <__mulsf3_pse+0x84>
 2b6:	86 95       	lsr	r24
 2b8:	77 95       	ror	r23
 2ba:	67 95       	ror	r22
 2bc:	b7 95       	ror	r27
 2be:	f7 95       	ror	r31
 2c0:	e7 95       	ror	r30
 2c2:	9f 5f       	subi	r25, 0xFF	; 255
 2c4:	c1 f7       	brne	.-16     	; 0x2b6 <__mulsf3_pse+0x90>
 2c6:	fe 2b       	or	r31, r30
 2c8:	88 0f       	add	r24, r24
 2ca:	91 1d       	adc	r25, r1
 2cc:	96 95       	lsr	r25
 2ce:	87 95       	ror	r24
 2d0:	97 f9       	bld	r25, 7
 2d2:	08 95       	ret

000002d4 <__fp_cmp>:
 2d4:	99 0f       	add	r25, r25
 2d6:	00 08       	sbc	r0, r0
 2d8:	55 0f       	add	r21, r21
 2da:	aa 0b       	sbc	r26, r26
 2dc:	e0 e8       	ldi	r30, 0x80	; 128
 2de:	fe ef       	ldi	r31, 0xFE	; 254
 2e0:	16 16       	cp	r1, r22
 2e2:	17 06       	cpc	r1, r23
 2e4:	e8 07       	cpc	r30, r24
 2e6:	f9 07       	cpc	r31, r25
 2e8:	c0 f0       	brcs	.+48     	; 0x31a <__fp_cmp+0x46>
 2ea:	12 16       	cp	r1, r18
 2ec:	13 06       	cpc	r1, r19
 2ee:	e4 07       	cpc	r30, r20
 2f0:	f5 07       	cpc	r31, r21
 2f2:	98 f0       	brcs	.+38     	; 0x31a <__fp_cmp+0x46>
 2f4:	62 1b       	sub	r22, r18
 2f6:	73 0b       	sbc	r23, r19
 2f8:	84 0b       	sbc	r24, r20
 2fa:	95 0b       	sbc	r25, r21
 2fc:	39 f4       	brne	.+14     	; 0x30c <__fp_cmp+0x38>
 2fe:	0a 26       	eor	r0, r26
 300:	61 f0       	breq	.+24     	; 0x31a <__fp_cmp+0x46>
 302:	23 2b       	or	r18, r19
 304:	24 2b       	or	r18, r20
 306:	25 2b       	or	r18, r21
 308:	21 f4       	brne	.+8      	; 0x312 <__fp_cmp+0x3e>
 30a:	08 95       	ret
 30c:	0a 26       	eor	r0, r26
 30e:	09 f4       	brne	.+2      	; 0x312 <__fp_cmp+0x3e>
 310:	a1 40       	sbci	r26, 0x01	; 1
 312:	a6 95       	lsr	r26
 314:	8f ef       	ldi	r24, 0xFF	; 255
 316:	81 1d       	adc	r24, r1
 318:	81 1d       	adc	r24, r1
 31a:	08 95       	ret

0000031c <__fp_inf>:
 31c:	97 f9       	bld	r25, 7
 31e:	9f 67       	ori	r25, 0x7F	; 127
 320:	80 e8       	ldi	r24, 0x80	; 128
 322:	70 e0       	ldi	r23, 0x00	; 0
 324:	60 e0       	ldi	r22, 0x00	; 0
 326:	08 95       	ret

00000328 <__fp_nan>:
 328:	9f ef       	ldi	r25, 0xFF	; 255
 32a:	80 ec       	ldi	r24, 0xC0	; 192
 32c:	08 95       	ret

0000032e <__fp_pscA>:
 32e:	00 24       	eor	r0, r0
 330:	0a 94       	dec	r0
 332:	16 16       	cp	r1, r22
 334:	17 06       	cpc	r1, r23
 336:	18 06       	cpc	r1, r24
 338:	09 06       	cpc	r0, r25
 33a:	08 95       	ret

0000033c <__fp_pscB>:
 33c:	00 24       	eor	r0, r0
 33e:	0a 94       	dec	r0
 340:	12 16       	cp	r1, r18
 342:	13 06       	cpc	r1, r19
 344:	14 06       	cpc	r1, r20
 346:	05 06       	cpc	r0, r21
 348:	08 95       	ret

0000034a <__fp_round>:
 34a:	09 2e       	mov	r0, r25
 34c:	03 94       	inc	r0
 34e:	00 0c       	add	r0, r0
 350:	11 f4       	brne	.+4      	; 0x356 <__fp_round+0xc>
 352:	88 23       	and	r24, r24
 354:	52 f0       	brmi	.+20     	; 0x36a <__fp_round+0x20>
 356:	bb 0f       	add	r27, r27
 358:	40 f4       	brcc	.+16     	; 0x36a <__fp_round+0x20>
 35a:	bf 2b       	or	r27, r31
 35c:	11 f4       	brne	.+4      	; 0x362 <__fp_round+0x18>
 35e:	60 ff       	sbrs	r22, 0
 360:	04 c0       	rjmp	.+8      	; 0x36a <__fp_round+0x20>
 362:	6f 5f       	subi	r22, 0xFF	; 255
 364:	7f 4f       	sbci	r23, 0xFF	; 255
 366:	8f 4f       	sbci	r24, 0xFF	; 255
 368:	9f 4f       	sbci	r25, 0xFF	; 255
 36a:	08 95       	ret

0000036c <__fp_split3>:
 36c:	57 fd       	sbrc	r21, 7
 36e:	90 58       	subi	r25, 0x80	; 128
 370:	44 0f       	add	r20, r20
 372:	55 1f       	adc	r21, r21
 374:	59 f0       	breq	.+22     	; 0x38c <__fp_splitA+0x10>
 376:	5f 3f       	cpi	r21, 0xFF	; 255
 378:	71 f0       	breq	.+28     	; 0x396 <__fp_splitA+0x1a>
 37a:	47 95       	ror	r20

0000037c <__fp_splitA>:
 37c:	88 0f       	add	r24, r24
 37e:	97 fb       	bst	r25, 7
 380:	99 1f       	adc	r25, r25
 382:	61 f0       	breq	.+24     	; 0x39c <__fp_splitA+0x20>
 384:	9f 3f       	cpi	r25, 0xFF	; 255
 386:	79 f0       	breq	.+30     	; 0x3a6 <__fp_splitA+0x2a>
 388:	87 95       	ror	r24
 38a:	08 95       	ret
 38c:	12 16       	cp	r1, r18
 38e:	13 06       	cpc	r1, r19
 390:	14 06       	cpc	r1, r20
 392:	55 1f       	adc	r21, r21
 394:	f2 cf       	rjmp	.-28     	; 0x37a <__fp_split3+0xe>
 396:	46 95       	lsr	r20
 398:	f1 df       	rcall	.-30     	; 0x37c <__fp_splitA>
 39a:	08 c0       	rjmp	.+16     	; 0x3ac <__fp_splitA+0x30>
 39c:	16 16       	cp	r1, r22
 39e:	17 06       	cpc	r1, r23
 3a0:	18 06       	cpc	r1, r24
 3a2:	99 1f       	adc	r25, r25
 3a4:	f1 cf       	rjmp	.-30     	; 0x388 <__fp_splitA+0xc>
 3a6:	86 95       	lsr	r24
 3a8:	71 05       	cpc	r23, r1
 3aa:	61 05       	cpc	r22, r1
 3ac:	08 94       	sec
 3ae:	08 95       	ret

000003b0 <__fp_zero>:
 3b0:	e8 94       	clt

000003b2 <__fp_szero>:
 3b2:	bb 27       	eor	r27, r27
 3b4:	66 27       	eor	r22, r22
 3b6:	77 27       	eor	r23, r23
 3b8:	cb 01       	movw	r24, r22
 3ba:	97 f9       	bld	r25, 7
 3bc:	08 95       	ret

000003be <_exit>:
 3be:	f8 94       	cli

000003c0 <__stop_program>:
 3c0:	ff cf       	rjmp	.-2      	; 0x3c0 <__stop_program>
