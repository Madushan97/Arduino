
System 9 Interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000046e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000041a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000046e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004a0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000004e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006b8  00000000  00000000  00000508  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000621  00000000  00000000  00000bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000268  00000000  00000000  000011e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000090  00000000  00000000  0000144c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000035f  00000000  00000000  000014dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000011d  00000000  00000000  0000183b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001958  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__vector_21>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 0b 02 	jmp	0x416	; 0x416 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <avr/io.h>
#include <avr/interrupt.h>

int main(void)
{
    DDRB = DDRB | 0b00011111;		// config PB0-PB5 as outputs
  80:	84 b1       	in	r24, 0x04	; 4
  82:	8f 61       	ori	r24, 0x1F	; 31
  84:	84 b9       	out	0x04, r24	; 4
	DDRC = DDRC & 0b11111110;		// config A0 as input
  86:	38 98       	cbi	0x07, 0	; 7
	
	ADMUX = ( ADMUX & 0b01111111 ) | 0b01000000;		// Vref to 5V
  88:	ec e7       	ldi	r30, 0x7C	; 124
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	80 81       	ld	r24, Z
  8e:	8f 73       	andi	r24, 0x3F	; 63
  90:	80 64       	ori	r24, 0x40	; 64
  92:	80 83       	st	Z, r24
	ADMUX = ADMUX & 0b11111000;			// multiplexer PC0 as analog input channel ADC0
  94:	80 81       	ld	r24, Z
  96:	88 7f       	andi	r24, 0xF8	; 248
  98:	80 83       	st	Z, r24
	
	ADCSRA = ADCSRA | 0b00001000;		// enable ADC interrupt
  9a:	ea e7       	ldi	r30, 0x7A	; 122
  9c:	f0 e0       	ldi	r31, 0x00	; 0
  9e:	80 81       	ld	r24, Z
  a0:	88 60       	ori	r24, 0x08	; 8
  a2:	80 83       	st	Z, r24
	ADCSRA = ADCSRA | 0b00000111;		// select prescaler to 128
  a4:	80 81       	ld	r24, Z
  a6:	87 60       	ori	r24, 0x07	; 7
  a8:	80 83       	st	Z, r24
	
	ADCSRA = ADCSRA | 0b10000000;		// enable ADC
  aa:	80 81       	ld	r24, Z
  ac:	80 68       	ori	r24, 0x80	; 128
  ae:	80 83       	st	Z, r24
	ADCSRA = ADCSRA | 0b01000000;		// ADC start
  b0:	80 81       	ld	r24, Z
  b2:	80 64       	ori	r24, 0x40	; 64
  b4:	80 83       	st	Z, r24
	sei();
  b6:	78 94       	sei
  b8:	ff cf       	rjmp	.-2      	; 0xb8 <main+0x38>

000000ba <__vector_21>:
    {
    }
	return 0;
}

ISR(ADC_vect){
  ba:	1f 92       	push	r1
  bc:	0f 92       	push	r0
  be:	0f b6       	in	r0, 0x3f	; 63
  c0:	0f 92       	push	r0
  c2:	11 24       	eor	r1, r1
  c4:	cf 92       	push	r12
  c6:	df 92       	push	r13
  c8:	ef 92       	push	r14
  ca:	ff 92       	push	r15
  cc:	2f 93       	push	r18
  ce:	3f 93       	push	r19
  d0:	4f 93       	push	r20
  d2:	5f 93       	push	r21
  d4:	6f 93       	push	r22
  d6:	7f 93       	push	r23
  d8:	8f 93       	push	r24
  da:	9f 93       	push	r25
  dc:	af 93       	push	r26
  de:	bf 93       	push	r27
  e0:	ef 93       	push	r30
  e2:	ff 93       	push	r31
	float vIn = ADCW * 5.0 / 1024;
  e4:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
  e8:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
  ec:	80 e0       	ldi	r24, 0x00	; 0
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	0e 94 e7 00 	call	0x1ce	; 0x1ce <__floatunsisf>
  f4:	20 e0       	ldi	r18, 0x00	; 0
  f6:	30 e0       	ldi	r19, 0x00	; 0
  f8:	40 ea       	ldi	r20, 0xA0	; 160
  fa:	50 e4       	ldi	r21, 0x40	; 64
  fc:	0e 94 29 01 	call	0x252	; 0x252 <__mulsf3>
 100:	20 e0       	ldi	r18, 0x00	; 0
 102:	30 e0       	ldi	r19, 0x00	; 0
 104:	40 e8       	ldi	r20, 0x80	; 128
 106:	5a e3       	ldi	r21, 0x3A	; 58
 108:	0e 94 29 01 	call	0x252	; 0x252 <__mulsf3>
 10c:	6b 01       	movw	r12, r22
 10e:	7c 01       	movw	r14, r24
	PORTB = PORTB & 0b11100000;			// turn off all LEDs
 110:	85 b1       	in	r24, 0x05	; 5
 112:	80 7e       	andi	r24, 0xE0	; 224
 114:	85 b9       	out	0x05, r24	; 5
	
	if(vIn > 4)
 116:	20 e0       	ldi	r18, 0x00	; 0
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	40 e8       	ldi	r20, 0x80	; 128
 11c:	50 e4       	ldi	r21, 0x40	; 64
 11e:	c7 01       	movw	r24, r14
 120:	b6 01       	movw	r22, r12
 122:	0e 94 24 01 	call	0x248	; 0x248 <__gesf2>
 126:	18 16       	cp	r1, r24
 128:	24 f4       	brge	.+8      	; 0x132 <__vector_21+0x78>
		PORTB = PORTB | 0b00011111;
 12a:	85 b1       	in	r24, 0x05	; 5
 12c:	8f 61       	ori	r24, 0x1F	; 31
 12e:	85 b9       	out	0x05, r24	; 5
 130:	34 c0       	rjmp	.+104    	; 0x19a <__vector_21+0xe0>
	else if(vIn > 3)
 132:	20 e0       	ldi	r18, 0x00	; 0
 134:	30 e0       	ldi	r19, 0x00	; 0
 136:	40 e4       	ldi	r20, 0x40	; 64
 138:	50 e4       	ldi	r21, 0x40	; 64
 13a:	c7 01       	movw	r24, r14
 13c:	b6 01       	movw	r22, r12
 13e:	0e 94 24 01 	call	0x248	; 0x248 <__gesf2>
 142:	18 16       	cp	r1, r24
 144:	24 f4       	brge	.+8      	; 0x14e <__vector_21+0x94>
		PORTB = PORTB | 0b00001111;
 146:	85 b1       	in	r24, 0x05	; 5
 148:	8f 60       	ori	r24, 0x0F	; 15
 14a:	85 b9       	out	0x05, r24	; 5
 14c:	26 c0       	rjmp	.+76     	; 0x19a <__vector_21+0xe0>
	else if(vIn > 2)
 14e:	20 e0       	ldi	r18, 0x00	; 0
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	40 e0       	ldi	r20, 0x00	; 0
 154:	50 e4       	ldi	r21, 0x40	; 64
 156:	c7 01       	movw	r24, r14
 158:	b6 01       	movw	r22, r12
 15a:	0e 94 24 01 	call	0x248	; 0x248 <__gesf2>
 15e:	18 16       	cp	r1, r24
 160:	24 f4       	brge	.+8      	; 0x16a <__vector_21+0xb0>
		PORTB = PORTB | 0b00000111;
 162:	85 b1       	in	r24, 0x05	; 5
 164:	87 60       	ori	r24, 0x07	; 7
 166:	85 b9       	out	0x05, r24	; 5
 168:	18 c0       	rjmp	.+48     	; 0x19a <__vector_21+0xe0>
	else if(vIn > 1)
 16a:	20 e0       	ldi	r18, 0x00	; 0
 16c:	30 e0       	ldi	r19, 0x00	; 0
 16e:	40 e8       	ldi	r20, 0x80	; 128
 170:	5f e3       	ldi	r21, 0x3F	; 63
 172:	c7 01       	movw	r24, r14
 174:	b6 01       	movw	r22, r12
 176:	0e 94 24 01 	call	0x248	; 0x248 <__gesf2>
 17a:	18 16       	cp	r1, r24
 17c:	24 f4       	brge	.+8      	; 0x186 <__vector_21+0xcc>
		PORTB = PORTB | 0b00000011;
 17e:	85 b1       	in	r24, 0x05	; 5
 180:	83 60       	ori	r24, 0x03	; 3
 182:	85 b9       	out	0x05, r24	; 5
 184:	0a c0       	rjmp	.+20     	; 0x19a <__vector_21+0xe0>
	else if(vIn > 0)
 186:	20 e0       	ldi	r18, 0x00	; 0
 188:	30 e0       	ldi	r19, 0x00	; 0
 18a:	a9 01       	movw	r20, r18
 18c:	c7 01       	movw	r24, r14
 18e:	b6 01       	movw	r22, r12
 190:	0e 94 24 01 	call	0x248	; 0x248 <__gesf2>
 194:	18 16       	cp	r1, r24
 196:	0c f4       	brge	.+2      	; 0x19a <__vector_21+0xe0>
		PORTB = PORTB | 0b00000001;
 198:	28 9a       	sbi	0x05, 0	; 5
	ADCSRA = ADCSRA | 0b01000000;		// restart ADC
 19a:	ea e7       	ldi	r30, 0x7A	; 122
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	80 81       	ld	r24, Z
 1a0:	80 64       	ori	r24, 0x40	; 64
 1a2:	80 83       	st	Z, r24
}
 1a4:	ff 91       	pop	r31
 1a6:	ef 91       	pop	r30
 1a8:	bf 91       	pop	r27
 1aa:	af 91       	pop	r26
 1ac:	9f 91       	pop	r25
 1ae:	8f 91       	pop	r24
 1b0:	7f 91       	pop	r23
 1b2:	6f 91       	pop	r22
 1b4:	5f 91       	pop	r21
 1b6:	4f 91       	pop	r20
 1b8:	3f 91       	pop	r19
 1ba:	2f 91       	pop	r18
 1bc:	ff 90       	pop	r15
 1be:	ef 90       	pop	r14
 1c0:	df 90       	pop	r13
 1c2:	cf 90       	pop	r12
 1c4:	0f 90       	pop	r0
 1c6:	0f be       	out	0x3f, r0	; 63
 1c8:	0f 90       	pop	r0
 1ca:	1f 90       	pop	r1
 1cc:	18 95       	reti

000001ce <__floatunsisf>:
 1ce:	e8 94       	clt
 1d0:	09 c0       	rjmp	.+18     	; 0x1e4 <__floatsisf+0x12>

000001d2 <__floatsisf>:
 1d2:	97 fb       	bst	r25, 7
 1d4:	3e f4       	brtc	.+14     	; 0x1e4 <__floatsisf+0x12>
 1d6:	90 95       	com	r25
 1d8:	80 95       	com	r24
 1da:	70 95       	com	r23
 1dc:	61 95       	neg	r22
 1de:	7f 4f       	sbci	r23, 0xFF	; 255
 1e0:	8f 4f       	sbci	r24, 0xFF	; 255
 1e2:	9f 4f       	sbci	r25, 0xFF	; 255
 1e4:	99 23       	and	r25, r25
 1e6:	a9 f0       	breq	.+42     	; 0x212 <__floatsisf+0x40>
 1e8:	f9 2f       	mov	r31, r25
 1ea:	96 e9       	ldi	r25, 0x96	; 150
 1ec:	bb 27       	eor	r27, r27
 1ee:	93 95       	inc	r25
 1f0:	f6 95       	lsr	r31
 1f2:	87 95       	ror	r24
 1f4:	77 95       	ror	r23
 1f6:	67 95       	ror	r22
 1f8:	b7 95       	ror	r27
 1fa:	f1 11       	cpse	r31, r1
 1fc:	f8 cf       	rjmp	.-16     	; 0x1ee <__floatsisf+0x1c>
 1fe:	fa f4       	brpl	.+62     	; 0x23e <__floatsisf+0x6c>
 200:	bb 0f       	add	r27, r27
 202:	11 f4       	brne	.+4      	; 0x208 <__floatsisf+0x36>
 204:	60 ff       	sbrs	r22, 0
 206:	1b c0       	rjmp	.+54     	; 0x23e <__floatsisf+0x6c>
 208:	6f 5f       	subi	r22, 0xFF	; 255
 20a:	7f 4f       	sbci	r23, 0xFF	; 255
 20c:	8f 4f       	sbci	r24, 0xFF	; 255
 20e:	9f 4f       	sbci	r25, 0xFF	; 255
 210:	16 c0       	rjmp	.+44     	; 0x23e <__floatsisf+0x6c>
 212:	88 23       	and	r24, r24
 214:	11 f0       	breq	.+4      	; 0x21a <__floatsisf+0x48>
 216:	96 e9       	ldi	r25, 0x96	; 150
 218:	11 c0       	rjmp	.+34     	; 0x23c <__floatsisf+0x6a>
 21a:	77 23       	and	r23, r23
 21c:	21 f0       	breq	.+8      	; 0x226 <__floatsisf+0x54>
 21e:	9e e8       	ldi	r25, 0x8E	; 142
 220:	87 2f       	mov	r24, r23
 222:	76 2f       	mov	r23, r22
 224:	05 c0       	rjmp	.+10     	; 0x230 <__floatsisf+0x5e>
 226:	66 23       	and	r22, r22
 228:	71 f0       	breq	.+28     	; 0x246 <__floatsisf+0x74>
 22a:	96 e8       	ldi	r25, 0x86	; 134
 22c:	86 2f       	mov	r24, r22
 22e:	70 e0       	ldi	r23, 0x00	; 0
 230:	60 e0       	ldi	r22, 0x00	; 0
 232:	2a f0       	brmi	.+10     	; 0x23e <__floatsisf+0x6c>
 234:	9a 95       	dec	r25
 236:	66 0f       	add	r22, r22
 238:	77 1f       	adc	r23, r23
 23a:	88 1f       	adc	r24, r24
 23c:	da f7       	brpl	.-10     	; 0x234 <__floatsisf+0x62>
 23e:	88 0f       	add	r24, r24
 240:	96 95       	lsr	r25
 242:	87 95       	ror	r24
 244:	97 f9       	bld	r25, 7
 246:	08 95       	ret

00000248 <__gesf2>:
 248:	0e 94 96 01 	call	0x32c	; 0x32c <__fp_cmp>
 24c:	08 f4       	brcc	.+2      	; 0x250 <__gesf2+0x8>
 24e:	8f ef       	ldi	r24, 0xFF	; 255
 250:	08 95       	ret

00000252 <__mulsf3>:
 252:	0e 94 3c 01 	call	0x278	; 0x278 <__mulsf3x>
 256:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__fp_round>
 25a:	0e 94 c3 01 	call	0x386	; 0x386 <__fp_pscA>
 25e:	38 f0       	brcs	.+14     	; 0x26e <__mulsf3+0x1c>
 260:	0e 94 ca 01 	call	0x394	; 0x394 <__fp_pscB>
 264:	20 f0       	brcs	.+8      	; 0x26e <__mulsf3+0x1c>
 266:	95 23       	and	r25, r21
 268:	11 f0       	breq	.+4      	; 0x26e <__mulsf3+0x1c>
 26a:	0c 94 ba 01 	jmp	0x374	; 0x374 <__fp_inf>
 26e:	0c 94 c0 01 	jmp	0x380	; 0x380 <__fp_nan>
 272:	11 24       	eor	r1, r1
 274:	0c 94 05 02 	jmp	0x40a	; 0x40a <__fp_szero>

00000278 <__mulsf3x>:
 278:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <__fp_split3>
 27c:	70 f3       	brcs	.-36     	; 0x25a <__mulsf3+0x8>

0000027e <__mulsf3_pse>:
 27e:	95 9f       	mul	r25, r21
 280:	c1 f3       	breq	.-16     	; 0x272 <__mulsf3+0x20>
 282:	95 0f       	add	r25, r21
 284:	50 e0       	ldi	r21, 0x00	; 0
 286:	55 1f       	adc	r21, r21
 288:	62 9f       	mul	r22, r18
 28a:	f0 01       	movw	r30, r0
 28c:	72 9f       	mul	r23, r18
 28e:	bb 27       	eor	r27, r27
 290:	f0 0d       	add	r31, r0
 292:	b1 1d       	adc	r27, r1
 294:	63 9f       	mul	r22, r19
 296:	aa 27       	eor	r26, r26
 298:	f0 0d       	add	r31, r0
 29a:	b1 1d       	adc	r27, r1
 29c:	aa 1f       	adc	r26, r26
 29e:	64 9f       	mul	r22, r20
 2a0:	66 27       	eor	r22, r22
 2a2:	b0 0d       	add	r27, r0
 2a4:	a1 1d       	adc	r26, r1
 2a6:	66 1f       	adc	r22, r22
 2a8:	82 9f       	mul	r24, r18
 2aa:	22 27       	eor	r18, r18
 2ac:	b0 0d       	add	r27, r0
 2ae:	a1 1d       	adc	r26, r1
 2b0:	62 1f       	adc	r22, r18
 2b2:	73 9f       	mul	r23, r19
 2b4:	b0 0d       	add	r27, r0
 2b6:	a1 1d       	adc	r26, r1
 2b8:	62 1f       	adc	r22, r18
 2ba:	83 9f       	mul	r24, r19
 2bc:	a0 0d       	add	r26, r0
 2be:	61 1d       	adc	r22, r1
 2c0:	22 1f       	adc	r18, r18
 2c2:	74 9f       	mul	r23, r20
 2c4:	33 27       	eor	r19, r19
 2c6:	a0 0d       	add	r26, r0
 2c8:	61 1d       	adc	r22, r1
 2ca:	23 1f       	adc	r18, r19
 2cc:	84 9f       	mul	r24, r20
 2ce:	60 0d       	add	r22, r0
 2d0:	21 1d       	adc	r18, r1
 2d2:	82 2f       	mov	r24, r18
 2d4:	76 2f       	mov	r23, r22
 2d6:	6a 2f       	mov	r22, r26
 2d8:	11 24       	eor	r1, r1
 2da:	9f 57       	subi	r25, 0x7F	; 127
 2dc:	50 40       	sbci	r21, 0x00	; 0
 2de:	9a f0       	brmi	.+38     	; 0x306 <__mulsf3_pse+0x88>
 2e0:	f1 f0       	breq	.+60     	; 0x31e <__mulsf3_pse+0xa0>
 2e2:	88 23       	and	r24, r24
 2e4:	4a f0       	brmi	.+18     	; 0x2f8 <__mulsf3_pse+0x7a>
 2e6:	ee 0f       	add	r30, r30
 2e8:	ff 1f       	adc	r31, r31
 2ea:	bb 1f       	adc	r27, r27
 2ec:	66 1f       	adc	r22, r22
 2ee:	77 1f       	adc	r23, r23
 2f0:	88 1f       	adc	r24, r24
 2f2:	91 50       	subi	r25, 0x01	; 1
 2f4:	50 40       	sbci	r21, 0x00	; 0
 2f6:	a9 f7       	brne	.-22     	; 0x2e2 <__mulsf3_pse+0x64>
 2f8:	9e 3f       	cpi	r25, 0xFE	; 254
 2fa:	51 05       	cpc	r21, r1
 2fc:	80 f0       	brcs	.+32     	; 0x31e <__mulsf3_pse+0xa0>
 2fe:	0c 94 ba 01 	jmp	0x374	; 0x374 <__fp_inf>
 302:	0c 94 05 02 	jmp	0x40a	; 0x40a <__fp_szero>
 306:	5f 3f       	cpi	r21, 0xFF	; 255
 308:	e4 f3       	brlt	.-8      	; 0x302 <__mulsf3_pse+0x84>
 30a:	98 3e       	cpi	r25, 0xE8	; 232
 30c:	d4 f3       	brlt	.-12     	; 0x302 <__mulsf3_pse+0x84>
 30e:	86 95       	lsr	r24
 310:	77 95       	ror	r23
 312:	67 95       	ror	r22
 314:	b7 95       	ror	r27
 316:	f7 95       	ror	r31
 318:	e7 95       	ror	r30
 31a:	9f 5f       	subi	r25, 0xFF	; 255
 31c:	c1 f7       	brne	.-16     	; 0x30e <__mulsf3_pse+0x90>
 31e:	fe 2b       	or	r31, r30
 320:	88 0f       	add	r24, r24
 322:	91 1d       	adc	r25, r1
 324:	96 95       	lsr	r25
 326:	87 95       	ror	r24
 328:	97 f9       	bld	r25, 7
 32a:	08 95       	ret

0000032c <__fp_cmp>:
 32c:	99 0f       	add	r25, r25
 32e:	00 08       	sbc	r0, r0
 330:	55 0f       	add	r21, r21
 332:	aa 0b       	sbc	r26, r26
 334:	e0 e8       	ldi	r30, 0x80	; 128
 336:	fe ef       	ldi	r31, 0xFE	; 254
 338:	16 16       	cp	r1, r22
 33a:	17 06       	cpc	r1, r23
 33c:	e8 07       	cpc	r30, r24
 33e:	f9 07       	cpc	r31, r25
 340:	c0 f0       	brcs	.+48     	; 0x372 <__fp_cmp+0x46>
 342:	12 16       	cp	r1, r18
 344:	13 06       	cpc	r1, r19
 346:	e4 07       	cpc	r30, r20
 348:	f5 07       	cpc	r31, r21
 34a:	98 f0       	brcs	.+38     	; 0x372 <__fp_cmp+0x46>
 34c:	62 1b       	sub	r22, r18
 34e:	73 0b       	sbc	r23, r19
 350:	84 0b       	sbc	r24, r20
 352:	95 0b       	sbc	r25, r21
 354:	39 f4       	brne	.+14     	; 0x364 <__fp_cmp+0x38>
 356:	0a 26       	eor	r0, r26
 358:	61 f0       	breq	.+24     	; 0x372 <__fp_cmp+0x46>
 35a:	23 2b       	or	r18, r19
 35c:	24 2b       	or	r18, r20
 35e:	25 2b       	or	r18, r21
 360:	21 f4       	brne	.+8      	; 0x36a <__fp_cmp+0x3e>
 362:	08 95       	ret
 364:	0a 26       	eor	r0, r26
 366:	09 f4       	brne	.+2      	; 0x36a <__fp_cmp+0x3e>
 368:	a1 40       	sbci	r26, 0x01	; 1
 36a:	a6 95       	lsr	r26
 36c:	8f ef       	ldi	r24, 0xFF	; 255
 36e:	81 1d       	adc	r24, r1
 370:	81 1d       	adc	r24, r1
 372:	08 95       	ret

00000374 <__fp_inf>:
 374:	97 f9       	bld	r25, 7
 376:	9f 67       	ori	r25, 0x7F	; 127
 378:	80 e8       	ldi	r24, 0x80	; 128
 37a:	70 e0       	ldi	r23, 0x00	; 0
 37c:	60 e0       	ldi	r22, 0x00	; 0
 37e:	08 95       	ret

00000380 <__fp_nan>:
 380:	9f ef       	ldi	r25, 0xFF	; 255
 382:	80 ec       	ldi	r24, 0xC0	; 192
 384:	08 95       	ret

00000386 <__fp_pscA>:
 386:	00 24       	eor	r0, r0
 388:	0a 94       	dec	r0
 38a:	16 16       	cp	r1, r22
 38c:	17 06       	cpc	r1, r23
 38e:	18 06       	cpc	r1, r24
 390:	09 06       	cpc	r0, r25
 392:	08 95       	ret

00000394 <__fp_pscB>:
 394:	00 24       	eor	r0, r0
 396:	0a 94       	dec	r0
 398:	12 16       	cp	r1, r18
 39a:	13 06       	cpc	r1, r19
 39c:	14 06       	cpc	r1, r20
 39e:	05 06       	cpc	r0, r21
 3a0:	08 95       	ret

000003a2 <__fp_round>:
 3a2:	09 2e       	mov	r0, r25
 3a4:	03 94       	inc	r0
 3a6:	00 0c       	add	r0, r0
 3a8:	11 f4       	brne	.+4      	; 0x3ae <__fp_round+0xc>
 3aa:	88 23       	and	r24, r24
 3ac:	52 f0       	brmi	.+20     	; 0x3c2 <__fp_round+0x20>
 3ae:	bb 0f       	add	r27, r27
 3b0:	40 f4       	brcc	.+16     	; 0x3c2 <__fp_round+0x20>
 3b2:	bf 2b       	or	r27, r31
 3b4:	11 f4       	brne	.+4      	; 0x3ba <__fp_round+0x18>
 3b6:	60 ff       	sbrs	r22, 0
 3b8:	04 c0       	rjmp	.+8      	; 0x3c2 <__fp_round+0x20>
 3ba:	6f 5f       	subi	r22, 0xFF	; 255
 3bc:	7f 4f       	sbci	r23, 0xFF	; 255
 3be:	8f 4f       	sbci	r24, 0xFF	; 255
 3c0:	9f 4f       	sbci	r25, 0xFF	; 255
 3c2:	08 95       	ret

000003c4 <__fp_split3>:
 3c4:	57 fd       	sbrc	r21, 7
 3c6:	90 58       	subi	r25, 0x80	; 128
 3c8:	44 0f       	add	r20, r20
 3ca:	55 1f       	adc	r21, r21
 3cc:	59 f0       	breq	.+22     	; 0x3e4 <__fp_splitA+0x10>
 3ce:	5f 3f       	cpi	r21, 0xFF	; 255
 3d0:	71 f0       	breq	.+28     	; 0x3ee <__fp_splitA+0x1a>
 3d2:	47 95       	ror	r20

000003d4 <__fp_splitA>:
 3d4:	88 0f       	add	r24, r24
 3d6:	97 fb       	bst	r25, 7
 3d8:	99 1f       	adc	r25, r25
 3da:	61 f0       	breq	.+24     	; 0x3f4 <__fp_splitA+0x20>
 3dc:	9f 3f       	cpi	r25, 0xFF	; 255
 3de:	79 f0       	breq	.+30     	; 0x3fe <__fp_splitA+0x2a>
 3e0:	87 95       	ror	r24
 3e2:	08 95       	ret
 3e4:	12 16       	cp	r1, r18
 3e6:	13 06       	cpc	r1, r19
 3e8:	14 06       	cpc	r1, r20
 3ea:	55 1f       	adc	r21, r21
 3ec:	f2 cf       	rjmp	.-28     	; 0x3d2 <__fp_split3+0xe>
 3ee:	46 95       	lsr	r20
 3f0:	f1 df       	rcall	.-30     	; 0x3d4 <__fp_splitA>
 3f2:	08 c0       	rjmp	.+16     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3f4:	16 16       	cp	r1, r22
 3f6:	17 06       	cpc	r1, r23
 3f8:	18 06       	cpc	r1, r24
 3fa:	99 1f       	adc	r25, r25
 3fc:	f1 cf       	rjmp	.-30     	; 0x3e0 <__fp_splitA+0xc>
 3fe:	86 95       	lsr	r24
 400:	71 05       	cpc	r23, r1
 402:	61 05       	cpc	r22, r1
 404:	08 94       	sec
 406:	08 95       	ret

00000408 <__fp_zero>:
 408:	e8 94       	clt

0000040a <__fp_szero>:
 40a:	bb 27       	eor	r27, r27
 40c:	66 27       	eor	r22, r22
 40e:	77 27       	eor	r23, r23
 410:	cb 01       	movw	r24, r22
 412:	97 f9       	bld	r25, 7
 414:	08 95       	ret

00000416 <_exit>:
 416:	f8 94       	cli

00000418 <__stop_program>:
 418:	ff cf       	rjmp	.-2      	; 0x418 <__stop_program>
