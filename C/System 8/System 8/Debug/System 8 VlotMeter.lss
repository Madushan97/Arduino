
System 8 VlotMeter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000422  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003ce  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000422  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000454  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000494  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006ab  00000000  00000000  000004b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000060f  00000000  00000000  00000b5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000250  00000000  00000000  0000116e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000038  00000000  00000000  000013c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000033d  00000000  00000000  000013f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000067  00000000  00000000  00001735  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  0000179c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 e5 01 	jmp	0x3ca	; 0x3ca <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
 */ 

#include <avr/io.h>

int main(void)
{
  80:	cf 92       	push	r12
  82:	df 92       	push	r13
  84:	ef 92       	push	r14
  86:	ff 92       	push	r15
    DDRB = DDRB | 0b00111111;		// configure PB0 to PB5 as outputs
  88:	84 b1       	in	r24, 0x04	; 4
  8a:	8f 63       	ori	r24, 0x3F	; 63
  8c:	84 b9       	out	0x04, r24	; 4
	DDRC = DDRC & 0b11111110;		// A0 as input
  8e:	38 98       	cbi	0x07, 0	; 7
	ADMUX = (ADMUX & 0b01111111) | 0b01000000;	// config reference voltage to 5V
  90:	ec e7       	ldi	r30, 0x7C	; 124
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	80 81       	ld	r24, Z
  96:	8f 73       	andi	r24, 0x3F	; 63
  98:	80 64       	ori	r24, 0x40	; 64
  9a:	80 83       	st	Z, r24
	ADMUX = ADMUX & 0b11111000;				// configure ADC0
  9c:	80 81       	ld	r24, Z
  9e:	88 7f       	andi	r24, 0xF8	; 248
  a0:	80 83       	st	Z, r24
	
	ADCSRA = ADCSRA | 0b00000111;			// set prescaler to 128
  a2:	ea e7       	ldi	r30, 0x7A	; 122
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	80 81       	ld	r24, Z
  a8:	87 60       	ori	r24, 0x07	; 7
  aa:	80 83       	st	Z, r24
	ADCSRA = ADCSRA | 0b10000000;			// enable ADC
  ac:	80 81       	ld	r24, Z
  ae:	80 68       	ori	r24, 0x80	; 128
  b0:	80 83       	st	Z, r24
	
    while (1) 
    {
		ADCSRA = ADCSRA | 0b01000000;		// start ADC
  b2:	80 81       	ld	r24, Z
  b4:	80 64       	ori	r24, 0x40	; 64
  b6:	80 83       	st	Z, r24
		while(ADCSRA & 0b01000000);			// poll until ADC over
  b8:	80 81       	ld	r24, Z
  ba:	86 fd       	sbrc	r24, 6
  bc:	fd cf       	rjmp	.-6      	; 0xb8 <main+0x38>
		float vIn = ADCW * 5.0/1024;
  be:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
  c2:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
  c6:	80 e0       	ldi	r24, 0x00	; 0
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	0e 94 c1 00 	call	0x182	; 0x182 <__floatunsisf>
  ce:	20 e0       	ldi	r18, 0x00	; 0
  d0:	30 e0       	ldi	r19, 0x00	; 0
  d2:	40 ea       	ldi	r20, 0xA0	; 160
  d4:	50 e4       	ldi	r21, 0x40	; 64
  d6:	0e 94 03 01 	call	0x206	; 0x206 <__mulsf3>
  da:	20 e0       	ldi	r18, 0x00	; 0
  dc:	30 e0       	ldi	r19, 0x00	; 0
  de:	40 e8       	ldi	r20, 0x80	; 128
  e0:	5a e3       	ldi	r21, 0x3A	; 58
  e2:	0e 94 03 01 	call	0x206	; 0x206 <__mulsf3>
  e6:	6b 01       	movw	r12, r22
  e8:	7c 01       	movw	r14, r24
		PORTB = PORTB & 0b11100000;		// turn off all the LEDs		
  ea:	85 b1       	in	r24, 0x05	; 5
  ec:	80 7e       	andi	r24, 0xE0	; 224
  ee:	85 b9       	out	0x05, r24	; 5
		if(vIn > 4) {
  f0:	20 e0       	ldi	r18, 0x00	; 0
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	40 e8       	ldi	r20, 0x80	; 128
  f6:	50 e4       	ldi	r21, 0x40	; 64
  f8:	c7 01       	movw	r24, r14
  fa:	b6 01       	movw	r22, r12
  fc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <__gesf2>
 100:	18 16       	cp	r1, r24
 102:	24 f4       	brge	.+8      	; 0x10c <main+0x8c>
			PORTB = PORTB | 0b00011111;		// turn on PB0-PB5
 104:	85 b1       	in	r24, 0x05	; 5
 106:	8f 61       	ori	r24, 0x1F	; 31
 108:	85 b9       	out	0x05, r24	; 5
 10a:	34 c0       	rjmp	.+104    	; 0x174 <main+0xf4>
    } else if(vIn > 3) {
 10c:	20 e0       	ldi	r18, 0x00	; 0
 10e:	30 e0       	ldi	r19, 0x00	; 0
 110:	40 e4       	ldi	r20, 0x40	; 64
 112:	50 e4       	ldi	r21, 0x40	; 64
 114:	c7 01       	movw	r24, r14
 116:	b6 01       	movw	r22, r12
 118:	0e 94 fe 00 	call	0x1fc	; 0x1fc <__gesf2>
 11c:	18 16       	cp	r1, r24
 11e:	24 f4       	brge	.+8      	; 0x128 <main+0xa8>
			PORTB = PORTB | 0b00001111;		// turn on PB0-PB4
 120:	85 b1       	in	r24, 0x05	; 5
 122:	8f 60       	ori	r24, 0x0F	; 15
 124:	85 b9       	out	0x05, r24	; 5
 126:	26 c0       	rjmp	.+76     	; 0x174 <main+0xf4>
	} else if(vIn > 2){
 128:	20 e0       	ldi	r18, 0x00	; 0
 12a:	30 e0       	ldi	r19, 0x00	; 0
 12c:	40 e0       	ldi	r20, 0x00	; 0
 12e:	50 e4       	ldi	r21, 0x40	; 64
 130:	c7 01       	movw	r24, r14
 132:	b6 01       	movw	r22, r12
 134:	0e 94 fe 00 	call	0x1fc	; 0x1fc <__gesf2>
 138:	18 16       	cp	r1, r24
 13a:	24 f4       	brge	.+8      	; 0x144 <main+0xc4>
			PORTB = PORTB | 0b00000111;		// turn on PB0-PB3
 13c:	85 b1       	in	r24, 0x05	; 5
 13e:	87 60       	ori	r24, 0x07	; 7
 140:	85 b9       	out	0x05, r24	; 5
 142:	18 c0       	rjmp	.+48     	; 0x174 <main+0xf4>
	} else if(vIn >1){
 144:	20 e0       	ldi	r18, 0x00	; 0
 146:	30 e0       	ldi	r19, 0x00	; 0
 148:	40 e8       	ldi	r20, 0x80	; 128
 14a:	5f e3       	ldi	r21, 0x3F	; 63
 14c:	c7 01       	movw	r24, r14
 14e:	b6 01       	movw	r22, r12
 150:	0e 94 fe 00 	call	0x1fc	; 0x1fc <__gesf2>
 154:	18 16       	cp	r1, r24
 156:	24 f4       	brge	.+8      	; 0x160 <main+0xe0>
			PORTB = PORTB | 0b00000011;
 158:	85 b1       	in	r24, 0x05	; 5
 15a:	83 60       	ori	r24, 0x03	; 3
 15c:	85 b9       	out	0x05, r24	; 5
 15e:	0a c0       	rjmp	.+20     	; 0x174 <main+0xf4>
	} else if(vIn > 0){
 160:	20 e0       	ldi	r18, 0x00	; 0
 162:	30 e0       	ldi	r19, 0x00	; 0
 164:	a9 01       	movw	r20, r18
 166:	c7 01       	movw	r24, r14
 168:	b6 01       	movw	r22, r12
 16a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <__gesf2>
 16e:	18 16       	cp	r1, r24
 170:	0c f4       	brge	.+2      	; 0x174 <main+0xf4>
			PORTB = PORTB | 0b00000001;		// only PB0
 172:	28 9a       	sbi	0x05, 0	; 5
	}
	return 0;
}
	}
 174:	80 e0       	ldi	r24, 0x00	; 0
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	ff 90       	pop	r15
 17a:	ef 90       	pop	r14
 17c:	df 90       	pop	r13
 17e:	cf 90       	pop	r12
 180:	08 95       	ret

00000182 <__floatunsisf>:
 182:	e8 94       	clt
 184:	09 c0       	rjmp	.+18     	; 0x198 <__floatsisf+0x12>

00000186 <__floatsisf>:
 186:	97 fb       	bst	r25, 7
 188:	3e f4       	brtc	.+14     	; 0x198 <__floatsisf+0x12>
 18a:	90 95       	com	r25
 18c:	80 95       	com	r24
 18e:	70 95       	com	r23
 190:	61 95       	neg	r22
 192:	7f 4f       	sbci	r23, 0xFF	; 255
 194:	8f 4f       	sbci	r24, 0xFF	; 255
 196:	9f 4f       	sbci	r25, 0xFF	; 255
 198:	99 23       	and	r25, r25
 19a:	a9 f0       	breq	.+42     	; 0x1c6 <__floatsisf+0x40>
 19c:	f9 2f       	mov	r31, r25
 19e:	96 e9       	ldi	r25, 0x96	; 150
 1a0:	bb 27       	eor	r27, r27
 1a2:	93 95       	inc	r25
 1a4:	f6 95       	lsr	r31
 1a6:	87 95       	ror	r24
 1a8:	77 95       	ror	r23
 1aa:	67 95       	ror	r22
 1ac:	b7 95       	ror	r27
 1ae:	f1 11       	cpse	r31, r1
 1b0:	f8 cf       	rjmp	.-16     	; 0x1a2 <__floatsisf+0x1c>
 1b2:	fa f4       	brpl	.+62     	; 0x1f2 <__floatsisf+0x6c>
 1b4:	bb 0f       	add	r27, r27
 1b6:	11 f4       	brne	.+4      	; 0x1bc <__floatsisf+0x36>
 1b8:	60 ff       	sbrs	r22, 0
 1ba:	1b c0       	rjmp	.+54     	; 0x1f2 <__floatsisf+0x6c>
 1bc:	6f 5f       	subi	r22, 0xFF	; 255
 1be:	7f 4f       	sbci	r23, 0xFF	; 255
 1c0:	8f 4f       	sbci	r24, 0xFF	; 255
 1c2:	9f 4f       	sbci	r25, 0xFF	; 255
 1c4:	16 c0       	rjmp	.+44     	; 0x1f2 <__floatsisf+0x6c>
 1c6:	88 23       	and	r24, r24
 1c8:	11 f0       	breq	.+4      	; 0x1ce <__floatsisf+0x48>
 1ca:	96 e9       	ldi	r25, 0x96	; 150
 1cc:	11 c0       	rjmp	.+34     	; 0x1f0 <__floatsisf+0x6a>
 1ce:	77 23       	and	r23, r23
 1d0:	21 f0       	breq	.+8      	; 0x1da <__floatsisf+0x54>
 1d2:	9e e8       	ldi	r25, 0x8E	; 142
 1d4:	87 2f       	mov	r24, r23
 1d6:	76 2f       	mov	r23, r22
 1d8:	05 c0       	rjmp	.+10     	; 0x1e4 <__floatsisf+0x5e>
 1da:	66 23       	and	r22, r22
 1dc:	71 f0       	breq	.+28     	; 0x1fa <__floatsisf+0x74>
 1de:	96 e8       	ldi	r25, 0x86	; 134
 1e0:	86 2f       	mov	r24, r22
 1e2:	70 e0       	ldi	r23, 0x00	; 0
 1e4:	60 e0       	ldi	r22, 0x00	; 0
 1e6:	2a f0       	brmi	.+10     	; 0x1f2 <__floatsisf+0x6c>
 1e8:	9a 95       	dec	r25
 1ea:	66 0f       	add	r22, r22
 1ec:	77 1f       	adc	r23, r23
 1ee:	88 1f       	adc	r24, r24
 1f0:	da f7       	brpl	.-10     	; 0x1e8 <__floatsisf+0x62>
 1f2:	88 0f       	add	r24, r24
 1f4:	96 95       	lsr	r25
 1f6:	87 95       	ror	r24
 1f8:	97 f9       	bld	r25, 7
 1fa:	08 95       	ret

000001fc <__gesf2>:
 1fc:	0e 94 70 01 	call	0x2e0	; 0x2e0 <__fp_cmp>
 200:	08 f4       	brcc	.+2      	; 0x204 <__gesf2+0x8>
 202:	8f ef       	ldi	r24, 0xFF	; 255
 204:	08 95       	ret

00000206 <__mulsf3>:
 206:	0e 94 16 01 	call	0x22c	; 0x22c <__mulsf3x>
 20a:	0c 94 ab 01 	jmp	0x356	; 0x356 <__fp_round>
 20e:	0e 94 9d 01 	call	0x33a	; 0x33a <__fp_pscA>
 212:	38 f0       	brcs	.+14     	; 0x222 <__mulsf3+0x1c>
 214:	0e 94 a4 01 	call	0x348	; 0x348 <__fp_pscB>
 218:	20 f0       	brcs	.+8      	; 0x222 <__mulsf3+0x1c>
 21a:	95 23       	and	r25, r21
 21c:	11 f0       	breq	.+4      	; 0x222 <__mulsf3+0x1c>
 21e:	0c 94 94 01 	jmp	0x328	; 0x328 <__fp_inf>
 222:	0c 94 9a 01 	jmp	0x334	; 0x334 <__fp_nan>
 226:	11 24       	eor	r1, r1
 228:	0c 94 df 01 	jmp	0x3be	; 0x3be <__fp_szero>

0000022c <__mulsf3x>:
 22c:	0e 94 bc 01 	call	0x378	; 0x378 <__fp_split3>
 230:	70 f3       	brcs	.-36     	; 0x20e <__mulsf3+0x8>

00000232 <__mulsf3_pse>:
 232:	95 9f       	mul	r25, r21
 234:	c1 f3       	breq	.-16     	; 0x226 <__mulsf3+0x20>
 236:	95 0f       	add	r25, r21
 238:	50 e0       	ldi	r21, 0x00	; 0
 23a:	55 1f       	adc	r21, r21
 23c:	62 9f       	mul	r22, r18
 23e:	f0 01       	movw	r30, r0
 240:	72 9f       	mul	r23, r18
 242:	bb 27       	eor	r27, r27
 244:	f0 0d       	add	r31, r0
 246:	b1 1d       	adc	r27, r1
 248:	63 9f       	mul	r22, r19
 24a:	aa 27       	eor	r26, r26
 24c:	f0 0d       	add	r31, r0
 24e:	b1 1d       	adc	r27, r1
 250:	aa 1f       	adc	r26, r26
 252:	64 9f       	mul	r22, r20
 254:	66 27       	eor	r22, r22
 256:	b0 0d       	add	r27, r0
 258:	a1 1d       	adc	r26, r1
 25a:	66 1f       	adc	r22, r22
 25c:	82 9f       	mul	r24, r18
 25e:	22 27       	eor	r18, r18
 260:	b0 0d       	add	r27, r0
 262:	a1 1d       	adc	r26, r1
 264:	62 1f       	adc	r22, r18
 266:	73 9f       	mul	r23, r19
 268:	b0 0d       	add	r27, r0
 26a:	a1 1d       	adc	r26, r1
 26c:	62 1f       	adc	r22, r18
 26e:	83 9f       	mul	r24, r19
 270:	a0 0d       	add	r26, r0
 272:	61 1d       	adc	r22, r1
 274:	22 1f       	adc	r18, r18
 276:	74 9f       	mul	r23, r20
 278:	33 27       	eor	r19, r19
 27a:	a0 0d       	add	r26, r0
 27c:	61 1d       	adc	r22, r1
 27e:	23 1f       	adc	r18, r19
 280:	84 9f       	mul	r24, r20
 282:	60 0d       	add	r22, r0
 284:	21 1d       	adc	r18, r1
 286:	82 2f       	mov	r24, r18
 288:	76 2f       	mov	r23, r22
 28a:	6a 2f       	mov	r22, r26
 28c:	11 24       	eor	r1, r1
 28e:	9f 57       	subi	r25, 0x7F	; 127
 290:	50 40       	sbci	r21, 0x00	; 0
 292:	9a f0       	brmi	.+38     	; 0x2ba <__mulsf3_pse+0x88>
 294:	f1 f0       	breq	.+60     	; 0x2d2 <__mulsf3_pse+0xa0>
 296:	88 23       	and	r24, r24
 298:	4a f0       	brmi	.+18     	; 0x2ac <__mulsf3_pse+0x7a>
 29a:	ee 0f       	add	r30, r30
 29c:	ff 1f       	adc	r31, r31
 29e:	bb 1f       	adc	r27, r27
 2a0:	66 1f       	adc	r22, r22
 2a2:	77 1f       	adc	r23, r23
 2a4:	88 1f       	adc	r24, r24
 2a6:	91 50       	subi	r25, 0x01	; 1
 2a8:	50 40       	sbci	r21, 0x00	; 0
 2aa:	a9 f7       	brne	.-22     	; 0x296 <__mulsf3_pse+0x64>
 2ac:	9e 3f       	cpi	r25, 0xFE	; 254
 2ae:	51 05       	cpc	r21, r1
 2b0:	80 f0       	brcs	.+32     	; 0x2d2 <__mulsf3_pse+0xa0>
 2b2:	0c 94 94 01 	jmp	0x328	; 0x328 <__fp_inf>
 2b6:	0c 94 df 01 	jmp	0x3be	; 0x3be <__fp_szero>
 2ba:	5f 3f       	cpi	r21, 0xFF	; 255
 2bc:	e4 f3       	brlt	.-8      	; 0x2b6 <__mulsf3_pse+0x84>
 2be:	98 3e       	cpi	r25, 0xE8	; 232
 2c0:	d4 f3       	brlt	.-12     	; 0x2b6 <__mulsf3_pse+0x84>
 2c2:	86 95       	lsr	r24
 2c4:	77 95       	ror	r23
 2c6:	67 95       	ror	r22
 2c8:	b7 95       	ror	r27
 2ca:	f7 95       	ror	r31
 2cc:	e7 95       	ror	r30
 2ce:	9f 5f       	subi	r25, 0xFF	; 255
 2d0:	c1 f7       	brne	.-16     	; 0x2c2 <__mulsf3_pse+0x90>
 2d2:	fe 2b       	or	r31, r30
 2d4:	88 0f       	add	r24, r24
 2d6:	91 1d       	adc	r25, r1
 2d8:	96 95       	lsr	r25
 2da:	87 95       	ror	r24
 2dc:	97 f9       	bld	r25, 7
 2de:	08 95       	ret

000002e0 <__fp_cmp>:
 2e0:	99 0f       	add	r25, r25
 2e2:	00 08       	sbc	r0, r0
 2e4:	55 0f       	add	r21, r21
 2e6:	aa 0b       	sbc	r26, r26
 2e8:	e0 e8       	ldi	r30, 0x80	; 128
 2ea:	fe ef       	ldi	r31, 0xFE	; 254
 2ec:	16 16       	cp	r1, r22
 2ee:	17 06       	cpc	r1, r23
 2f0:	e8 07       	cpc	r30, r24
 2f2:	f9 07       	cpc	r31, r25
 2f4:	c0 f0       	brcs	.+48     	; 0x326 <__fp_cmp+0x46>
 2f6:	12 16       	cp	r1, r18
 2f8:	13 06       	cpc	r1, r19
 2fa:	e4 07       	cpc	r30, r20
 2fc:	f5 07       	cpc	r31, r21
 2fe:	98 f0       	brcs	.+38     	; 0x326 <__fp_cmp+0x46>
 300:	62 1b       	sub	r22, r18
 302:	73 0b       	sbc	r23, r19
 304:	84 0b       	sbc	r24, r20
 306:	95 0b       	sbc	r25, r21
 308:	39 f4       	brne	.+14     	; 0x318 <__fp_cmp+0x38>
 30a:	0a 26       	eor	r0, r26
 30c:	61 f0       	breq	.+24     	; 0x326 <__fp_cmp+0x46>
 30e:	23 2b       	or	r18, r19
 310:	24 2b       	or	r18, r20
 312:	25 2b       	or	r18, r21
 314:	21 f4       	brne	.+8      	; 0x31e <__fp_cmp+0x3e>
 316:	08 95       	ret
 318:	0a 26       	eor	r0, r26
 31a:	09 f4       	brne	.+2      	; 0x31e <__fp_cmp+0x3e>
 31c:	a1 40       	sbci	r26, 0x01	; 1
 31e:	a6 95       	lsr	r26
 320:	8f ef       	ldi	r24, 0xFF	; 255
 322:	81 1d       	adc	r24, r1
 324:	81 1d       	adc	r24, r1
 326:	08 95       	ret

00000328 <__fp_inf>:
 328:	97 f9       	bld	r25, 7
 32a:	9f 67       	ori	r25, 0x7F	; 127
 32c:	80 e8       	ldi	r24, 0x80	; 128
 32e:	70 e0       	ldi	r23, 0x00	; 0
 330:	60 e0       	ldi	r22, 0x00	; 0
 332:	08 95       	ret

00000334 <__fp_nan>:
 334:	9f ef       	ldi	r25, 0xFF	; 255
 336:	80 ec       	ldi	r24, 0xC0	; 192
 338:	08 95       	ret

0000033a <__fp_pscA>:
 33a:	00 24       	eor	r0, r0
 33c:	0a 94       	dec	r0
 33e:	16 16       	cp	r1, r22
 340:	17 06       	cpc	r1, r23
 342:	18 06       	cpc	r1, r24
 344:	09 06       	cpc	r0, r25
 346:	08 95       	ret

00000348 <__fp_pscB>:
 348:	00 24       	eor	r0, r0
 34a:	0a 94       	dec	r0
 34c:	12 16       	cp	r1, r18
 34e:	13 06       	cpc	r1, r19
 350:	14 06       	cpc	r1, r20
 352:	05 06       	cpc	r0, r21
 354:	08 95       	ret

00000356 <__fp_round>:
 356:	09 2e       	mov	r0, r25
 358:	03 94       	inc	r0
 35a:	00 0c       	add	r0, r0
 35c:	11 f4       	brne	.+4      	; 0x362 <__fp_round+0xc>
 35e:	88 23       	and	r24, r24
 360:	52 f0       	brmi	.+20     	; 0x376 <__fp_round+0x20>
 362:	bb 0f       	add	r27, r27
 364:	40 f4       	brcc	.+16     	; 0x376 <__fp_round+0x20>
 366:	bf 2b       	or	r27, r31
 368:	11 f4       	brne	.+4      	; 0x36e <__fp_round+0x18>
 36a:	60 ff       	sbrs	r22, 0
 36c:	04 c0       	rjmp	.+8      	; 0x376 <__fp_round+0x20>
 36e:	6f 5f       	subi	r22, 0xFF	; 255
 370:	7f 4f       	sbci	r23, 0xFF	; 255
 372:	8f 4f       	sbci	r24, 0xFF	; 255
 374:	9f 4f       	sbci	r25, 0xFF	; 255
 376:	08 95       	ret

00000378 <__fp_split3>:
 378:	57 fd       	sbrc	r21, 7
 37a:	90 58       	subi	r25, 0x80	; 128
 37c:	44 0f       	add	r20, r20
 37e:	55 1f       	adc	r21, r21
 380:	59 f0       	breq	.+22     	; 0x398 <__fp_splitA+0x10>
 382:	5f 3f       	cpi	r21, 0xFF	; 255
 384:	71 f0       	breq	.+28     	; 0x3a2 <__fp_splitA+0x1a>
 386:	47 95       	ror	r20

00000388 <__fp_splitA>:
 388:	88 0f       	add	r24, r24
 38a:	97 fb       	bst	r25, 7
 38c:	99 1f       	adc	r25, r25
 38e:	61 f0       	breq	.+24     	; 0x3a8 <__fp_splitA+0x20>
 390:	9f 3f       	cpi	r25, 0xFF	; 255
 392:	79 f0       	breq	.+30     	; 0x3b2 <__fp_splitA+0x2a>
 394:	87 95       	ror	r24
 396:	08 95       	ret
 398:	12 16       	cp	r1, r18
 39a:	13 06       	cpc	r1, r19
 39c:	14 06       	cpc	r1, r20
 39e:	55 1f       	adc	r21, r21
 3a0:	f2 cf       	rjmp	.-28     	; 0x386 <__fp_split3+0xe>
 3a2:	46 95       	lsr	r20
 3a4:	f1 df       	rcall	.-30     	; 0x388 <__fp_splitA>
 3a6:	08 c0       	rjmp	.+16     	; 0x3b8 <__fp_splitA+0x30>
 3a8:	16 16       	cp	r1, r22
 3aa:	17 06       	cpc	r1, r23
 3ac:	18 06       	cpc	r1, r24
 3ae:	99 1f       	adc	r25, r25
 3b0:	f1 cf       	rjmp	.-30     	; 0x394 <__fp_splitA+0xc>
 3b2:	86 95       	lsr	r24
 3b4:	71 05       	cpc	r23, r1
 3b6:	61 05       	cpc	r22, r1
 3b8:	08 94       	sec
 3ba:	08 95       	ret

000003bc <__fp_zero>:
 3bc:	e8 94       	clt

000003be <__fp_szero>:
 3be:	bb 27       	eor	r27, r27
 3c0:	66 27       	eor	r22, r22
 3c2:	77 27       	eor	r23, r23
 3c4:	cb 01       	movw	r24, r22
 3c6:	97 f9       	bld	r25, 7
 3c8:	08 95       	ret

000003ca <_exit>:
 3ca:	f8 94       	cli

000003cc <__stop_program>:
 3cc:	ff cf       	rjmp	.-2      	; 0x3cc <__stop_program>
